// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// accCpp
List accCpp(IntegerMatrix AM, CharacterVector nodeNames, CharacterVector index);
RcppExport SEXP _ToPASeq_accCpp(SEXP AMSEXP, SEXP nodeNamesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type AM(AMSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type nodeNames(nodeNamesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(accCpp(AM, nodeNames, index));
    return rcpp_result_gen;
END_RCPP
}
// betweenness
NumericVector betweenness(IntegerMatrix g, CharacterVector V);
RcppExport SEXP _ToPASeq_betweenness(SEXP gSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type g(gSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(betweenness(g, V));
    return rcpp_result_gen;
END_RCPP
}
// colMax
NumericVector colMax(NumericMatrix X);
RcppExport SEXP _ToPASeq_colMax(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colMax(X));
    return rcpp_result_gen;
END_RCPP
}
// colMin
NumericVector colMin(NumericMatrix X);
RcppExport SEXP _ToPASeq_colMin(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colMin(X));
    return rcpp_result_gen;
END_RCPP
}
// downstreamCpp
IntegerVector downstreamCpp(IntegerMatrix AM, CharacterVector nodeNames, CharacterVector index);
RcppExport SEXP _ToPASeq_downstreamCpp(SEXP AMSEXP, SEXP nodeNamesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type AM(AMSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type nodeNames(nodeNamesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(downstreamCpp(AM, nodeNames, index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ToPASeq_accCpp", (DL_FUNC) &_ToPASeq_accCpp, 3},
    {"_ToPASeq_betweenness", (DL_FUNC) &_ToPASeq_betweenness, 2},
    {"_ToPASeq_colMax", (DL_FUNC) &_ToPASeq_colMax, 1},
    {"_ToPASeq_colMin", (DL_FUNC) &_ToPASeq_colMin, 1},
    {"_ToPASeq_downstreamCpp", (DL_FUNC) &_ToPASeq_downstreamCpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ToPASeq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
